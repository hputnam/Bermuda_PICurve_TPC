{"frames":[{"func":"df %>% mutate(intervals = map2(data0, info, function(.x, .y) {\n    split(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n        .y$Stop.time)), labels = as.character(.y$Light_Value)))\n})) %>% mutate(data = map(intervals, ~unnest(tibble(.), .id = \"Light_Value\")))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., data = map(intervals, ~unnest(tibble(.), .id = \"Light_Value\")))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., intervals = map2(data0, info, function(.x, .y) {\n    split(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n        .y$Stop.time)), labels = as.character(.y$Light_Value)))\n}))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., intervals = map2(data0, info, function(.x, \n    .y) {\n    split(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n        .y$Stop.time)), labels = as.character(.y$Light_Value))) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map2(data0, info, function(.x, .y) {\n    split(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n        .y$Stop.time)), labels = as.character(.y$Light_Value)))\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map2_(\"list\", .x, .y, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, \n    call_with_cleanup(map2_impl, environment(), .type, .progress, \n        n, names, i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    if (i == 0L) {\n    }\n    else { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_with_cleanup(map2_impl, environment(), .type, .progress, \n    n, names, i)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], .y[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"split(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n    .y$Stop.time)), labels = as.character(.y$Light_Value)))","file":"","line_number":3,"end_line_number":4,"character_number":5,"end_character_number":61},{"func":"split.data.frame(.x, f = cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n    .y$Stop.time)), labels = as.character(.y$Light_Value)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cut(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n    .y$Stop.time)), labels = as.character(.y$Light_Value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cut.default(as.numeric(.x$Time), breaks = as.numeric(c(.y$Start.time, \n    .y$Stop.time)), labels = as.character(.y$Light_Value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"lengths of 'breaks' and 'labels' differ\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    if (i == 0L) {\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(message, location = i, name = name, parent = cnd, \n    call = error_call, class = \"purrr_error_indexed\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in mutate(., intervals = map2(data0, info, function(.x, .y) { : \n\u001B[1mCaused by error in `map2()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mâ„¹\u001B[38;5;232m In index: 1.\u001B[39m\n\u001B[1mCaused by error in `cut.default()`:\u001B[22m\n\u001B[33m!\u001B[39m lengths of 'breaks' and 'labels' differ\n"}